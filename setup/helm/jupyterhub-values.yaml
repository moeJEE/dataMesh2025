# JupyterHub Configuration for DataMeesh
# Connects to Data Mesh domains for data science and analytics

proxy:
  service:
    type: NodePort
    nodePorts:
      http: 30080
  secretToken: "a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6"

hub:
  config:
    # Simple authentication for demo purposes
    DummyAuthenticator:
      password: "datamesh2024"
    JupyterHub:
      authenticator_class: dummy
      admin_access: true
      admin_users:
        - admin
        - datascientist
  
  # Resource limits (reduced for resource-constrained environments)
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "250m"
  
  # Database configuration (optional - uses SQLite by default)
  db:
    type: sqlite-memory
  
  # Service configuration
  service:
    type: ClusterIP

singleuser:
  # Custom image with DBT + Git + Scheduler
  image:
    name: jupyterhub-dbt
    tag: "latest"
    pullPolicy: Never  # Use local image
  
  # Default resources per user (optimized for 7.6GB total RAM)
  cpu:
    limit: 0.5
    guarantee: 0.05
  memory:
    limit: "512M"
    guarantee: "256M"
  
  # Storage for user notebooks
  storage:
    type: dynamic
    capacity: 5Gi
    dynamic:
      storageClass: datamesh-storage
  
  # Environment variables
  extraEnv:
    JUPYTERHUB_SINGLEUSER_APP: "jupyter_server.serverapp.ServerApp"
    SALES_API_URL: "http://sales-api.sales-domain.svc.cluster.local:8000"
    MARKETING_API_URL: "http://marketing-api.marketing-domain.svc.cluster.local:8001"
  
  # Network access
  networkPolicy:
    enabled: true
    egress:
      - to:
          - namespaceSelector:
              matchLabels:
                mesh-component: domain
        ports:
          - protocol: TCP
            port: 8000
          - protocol: TCP
            port: 8001

# Scheduling
scheduling:
  userScheduler:
    enabled: false
  
  podPriority:
    enabled: true
    defaultPriority: 0
    userPlaceholderPriority: -10

# Culling idle notebooks
cull:
  enabled: true
  timeout: 3600  # 1 hour
  every: 600     # Check every 10 minutes

# Ingress (disabled - using NodePort for simplicity)
ingress:
  enabled: false

# RBAC (updated for JupyterHub 2.0+)
rbac:
  create: true

# Debug mode
debug:
  enabled: false

